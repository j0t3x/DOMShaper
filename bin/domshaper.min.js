!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("domshaper",[],e):"object"==typeof exports?exports.domshaper=e():t.domshaper=e()}(this,function(){return function(t){function e(s){if(i[s])return i[s].exports;var n=i[s]={exports:{},id:s,loaded:!1};return t[s].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){var s=i(1),n=i(2),o=i(3),h=i(4),r=i(5),l=i(6),a=i(7);e.Shape=s,e.ButtonShape=n,e.OptionShape=o,e.ImageShape=h,e.TextInputShape=r,e.TextShape=l,e.FormShape=a},function(t,e){var i=function(t,e){if(this.id=e?e:null,this.domElement,this.childs=[],this.classes="",this.parent,this.needsRender=!0,this.attributes={},this.eventAndCallback={},!t)throw"Element should be a DOM node or a string literal";"string"==typeof t&&(this.elementName=t?t:null),t.nodeName&&(this.domElement=t)};i.prototype.appendShape=function(t){if(t instanceof i)t.parent=this,this.childs.push(t);else if("string"==typeof t){var e=new i(t,null);e.parent=this,this.childs.push(e)}else console.err("only shape or string as arguments, gtfo")},i.prototype.buildDom=function(){this.elementName&&!this.domElement&&(this.domElement=document.createElement(this.elementName)),this.id&&(this.domElement.id=this.id),this.classes&&(this.domElement.className+=" "+this.classes);for(var t in this.attributes)this.domElement.setAttribute(t,this.attributes[t]);for(var e=0;e<this.childs.length;e++)this.childs[e].domElement||this.childs[e].buildDom(),this.domElement.appendChild(this.childs[e].domElement);for(var i in this.eventAndCallback)this.domElement.addEventListener(i,this.eventAndCallback[i])},i.prototype.render=function(){if(this.needsRender||this.render_(),this.childs)for(var t=0;t<this.childs.length;t++)this.childs[t].render();this.needsRender=!1},i.prototype.render_=function(){},i.prototype.on=function(t,e){if("string"!=typeof t)throw"use string identifiers for events";this.eventAndCallback[t]=e},i.prototype.removeAllChilds=function(){for(;this.domElement.firstChild;)this.domElement.removeChild(this.domElement.firstChild);for(var t=this.childs.length-1;t>=0;t--)this.childs[t].parent=null,this.childs.splice(t,1)},i.prototype.removeShape=function(t){var e;if(!(t instanceof i))throw": argument should be a Shape object";for(var s=this.childs.length-1;s>=0;s--)if(this.childs[s]===t){e=this.childs.splice(s,1)[0];break}e&&this.domElement.removeChild(e.domElement)},i.prototype.setClass=function(){for(var t=0;t<arguments.length;t++){if("string"!=typeof arguments[t])throw": className should be a string literal";this.classes+=" "+arguments[t]}},i.prototype.setId=function(t){if("string"!=typeof t)throw": id should be a string literal";this.id=t,this.id&&(this.domElement.id=this.id)},i.prototype.addAttr=function(t,e){if("string"!=typeof t)throw": name should be a string literal";if(!e||"string"!=typeof e&&"number"!=typeof e)throw": value shouldnt be empty, use number or string";this.attributes[t]=e},t.exports=i},function(t,e,i){var s=i(1),n=function(t,e){s.call(this,"button",e),this.textContent=t};n.prototype=Object.create(s.prototype),n.prototype.contructor=n,n.prototype.buildDom=function(){this.elementName&&!this.domElement&&(this.domElement=document.createElement(this.elementName)),this.domElement.innerHTML=this.textContent,this.id&&(this.domElement.id=this.id),this.classes&&(this.domElement.className+=" "+this.classes);for(var t in this.attributes)this.domElement.setAttribute(t,this.attributes[t]);for(var e in this.eventAndCallback)this.domElement.addEventListener(e,this.eventAndCallback[e])},n.prototype.updateText=function(t){if("string"!=typeof t)throw": argument of updateText should be a string literal";this.textContent=t},n.prototype.render_=function(){this.textContent&&(this.domElement.innerHTML=this.textContent)},t.exports=n},function(t,e,i){var s=i(1),n=function(t,e){if(s.call(this,"div",t),"string"!=typeof e)throw"indicate wether this is a radio or check group of options with a string";this.type="","radio"===e?this.type="radio":"check"===e&&(this.type="checkbox"),this.groupName=t,this.structure=[],this.domElements=[],this.domElement,this.changedOptionsValues=[]};n.prototype=Object.create(s.prototype),n.prototype.contructor=n,n.prototype.addOption=function(t,e,i,s){if(!t||!e)throw"you should add an option with display and value arguments...";this.structure.push({display:t,value:e,classForName:i?i:"",classForInput:s?s:""})},n.prototype.buildDom=function(){this.domElement=document.createElement("div");for(var t=0;t<this.structure.length;t++){var e={container:document.createElement("div"),input:null,label:null,name:null,indicator:null};e.input=document.createElement("input"),e.input.type=this.type,e.input.name=this.groupName,e.input.value=this.structure[t].value,e.input.className=this.structure[t].classForInput,e.label=document.createElement("label"),e.label.className=this.structure[t].classForName,e.label.appendChild(e.input),e.name=document.createElement("span"),e.name.innerHTML=this.structure[t].display,e.name.className="custom-control-description",e.label.appendChild(e.name),e.indicator=document.createElement("span"),e.indicator.className="custom-control-indicator",e.label.appendChild(e.indicator),e.container.appendChild(e.label),e.container.className="form-check",this.domElements.push(e),this.domElement.appendChild(e.container)}this.id&&(this.domElement.id=this.id),this.classes&&(this.domElement.className+=" "+this.classes)},n.prototype.getSelectedOptions=function(){for(var t=[],e=this.domElements.length;e--;)this.domElements[e].input.checked&&t.push(this.domElements[e].input.value);return t},n.prototype.render_=function(){},t.exports=n},function(t,e,i){var s=i(1),n=function(t,e){if(s.call(this,"img",e),"string"!=typeof t)throw": image src should be a string literal";if(!t)throw": 3rd input shouldnt be null";this.src=t,this.width,this.height};n.prototype=Object.create(s.prototype),n.prototype.contructor=n,n.prototype.buildDom=function(){this.elementName&&!this.domElement&&(this.domElement=document.createElement(this.elementName)),this.domElement.src=this.src,this.id&&(this.domElement.id=this.id),this.classes&&(this.domElement.className+=" "+this.classes),this.width&&(this.domElement.width=this.width),this.height&&(this.domElement.height=this.height)},n.prototype.render_=function(){this.domElement.src=this.src,this.width&&(this.domElement.style.width=this.width+"px"),this.height&&(this.domElement.style.height=this.height+"px")},n.prototype.changeImage=function(t){if("string"!=typeof t)throw": image src should be a string literal";this.src=t},n.prototype.setWHpx=function(t,e){t&&"number"==typeof t&&(this.width=t),e&&"number"==typeof e&&(this.height=e)},t.exports=n},function(t,e,i){var s=i(1),n=function(t){s.call(this,"input",t),this.textContent="",this.name=""};n.prototype=Object.create(s.prototype),n.prototype.contructor=n,n.prototype.buildDom=function(){this.elementName&&!this.domElement&&(this.domElement=document.createElement(this.elementName)),this.domElement.type="text",this.domElement.value=this.textContent,this.id&&(this.domElement.id=this.id),this.classes&&(this.domElement.className+=" "+this.classes),this.name&&this.domElement.setAttribute("name",this.name);for(var t in this.attributes)this.domElement.setAttribute(t,this.attributes[t])},n.prototype.getVal=function(){if(!this.domElement)throw": first build object DOM ->  buildDom()";return this.domElement.value},n.prototype.setValue=function(t){if("string"!=typeof t)throw": argument of updateText should be a string literal";this.textContent=t},n.prototype.render_=function(){this.textContent&&(this.domElement.value=this.textContent)},n.prototype.setName=function(){for(var t=0;t<arguments.length;t++){if("string"!=typeof arguments[t])throw": Name should be a string literal";this.name=arguments[t]}},t.exports=n},function(t,e,i){var s=i(1),n=function(t,e){s.call(this,t,e),this.textContent=""};n.prototype=Object.create(s.prototype),n.prototype.contructor=n,n.prototype.buildDom=function(){this.elementName&&!this.domElement&&(this.domElement=document.createElement(this.elementName)),this.domElement.innerHTML=this.textContent,this.id&&(this.domElement.id=this.id),this.classes&&(this.domElement.className+=" "+this.classes)},n.prototype.updateText=function(t){if(this.needsReRender=!0,"string"!=typeof t)throw": argument of updateText should be a string literal";this.textContent=t},n.prototype.render_=function(){this.textContent&&(this.domElement.innerHTML=this.textContent)},t.exports=n},function(t,e,i){var s=i(1),n=i(5),o=i(2),h=i(3),r=function(t){s.call(this,"form",t),this.method="",this.encoding="",this.submitTrigger,this.data={}};r.prototype=Object.create(s.prototype),r.prototype.contructor=r,r.prototype.buildDom=function(){if(this.elementName&&!this.domElement&&(this.domElement=document.createElement(this.elementName)),this.id&&(this.domElement.id=this.id),this.classes&&(this.domElement.className+=" "+this.classes),this.action&&(this.domElement.action=this.action),this.method&&(this.domElement.method=this.method),this.encoding&&(this.domElement.enctype=this.encoding),!this.submitTrigger)throw"You need a submit trigger for a form";this.submitTrigger&&this.appendShape(this.submitTrigger);for(var t=0;t<this.childs.length;t++)this.childs[t].domElement||this.childs[t].buildDom(),this.domElement.appendChild(this.childs[t].domElement);this.submitTrigger.visible||(this.submitTrigger.domElement.style.visibility="hidden");for(var e in this.eventAndCallback)this.domElement.addEventListener(e,this.eventAndCallback[e])},r.prototype.setAction=function(t){t&&(this.action=t)},r.prototype.setMethod=function(t){t&&(this.method=t)},r.prototype.setEncoding=function(t){t&&(this.encoding=t)},r.prototype.addSection=function(t){if(!(t instanceof s))throw"The argument should be a Shape object";this.appendShape(t),console.log(this.childs)},r.prototype.setSubmitTrigger=function(t){if("string"!=typeof t)throw"Argument should be a string containing text of submit button, if no text submit will be not visible";var e;return""!==t?(e=new o(t),e.visible=!0):e=new o(""),this.submitTrigger=e,e},r.prototype.sendData=function(t){t.preventDefault()},r.prototype.serializeForm=function(){return this.serializeElement(this),this.data},r.prototype.serializeElement=function(t){for(var e=0;e<t.childs.length;++e){var i,s,o=t.childs[e];o instanceof n?(i=o.id,s=o.getVal()):o instanceof h&&(i=o.id,s=o.getSelectedOptions()),i&&(this.data[i]=s),o.childs.length>0&&this.serializeElement(o)}},r.prototype.render_=function(){},t.exports=r}])});
//# sourceMappingURL=domshaper.min.js.map